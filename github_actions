

create a directory called .github/workflows then create a testim-github-actions.yml file 

populate the file with one of the following code snippets:


Sample one (using secrets, user has to manually create a secret but its a best practice so they token/project are not exposed
in the github actions log file. In the example below the user would need to create a label called 'githubactions' and add it to any test alternatives could be suite or test plan or individual test case. Using the ${{github.run_number}} will allow the user to filter the github actions build number in reporting.

name: testim-github-actions
on: [push]
jobs:
  run-testimio-cli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm install -g @testim/testim-cli 
      - run: testim --version
      - run: testim --label "githubactions" --token ${{ secrets.TESTIM_TOKEN }} --project ${{ secrets.TESTIM_PROJECTID }} --grid "Testim-Grid" --result-label ${{github.run_number}} --turbo-mode 

Sample two (without secrets) <token> and <projectID> would be populated with the correct values, more of cut and paste and run. In the example below the user would need to create a label called 'githubactions' and add it to any test alternatives could be suite or test plan or individual test case. Using the ${{github.run_number}} will allow the user to filter the github actions build number in reporting.

name: testim-github-actions
on: [push]
jobs:
  run-testimio-cli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm install -g @testim/testim-cli 
      - run: testim --version
      - run: testim --label "githubactions" --token <token> --project <projectID> --grid "Testim-Grid" --result-label ${{github.run_number}} --turbo-mode 
